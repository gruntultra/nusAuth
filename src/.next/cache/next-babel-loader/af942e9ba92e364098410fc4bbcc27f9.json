{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// ./src/pages/index.js\nimport Container from \"react-bootstrap/Container\";\nimport fetch from \"isomorphic-fetch\";\nimport Thoughts from \"../components/Thoughts\";\n\nfunction Index(props) {\n  return __jsx(Container, null, __jsx(Thoughts, {\n    thoughts: props.thoughts\n  }));\n}\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var req, baseURL, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req;\n            baseURL = req ? \"\".concat(req.protocol, \"://\").concat(req.get(\"Host\")) : \"\";\n            _context.next = 4;\n            return fetch(\"\".concat(baseURL, \"/api/thoughts\"));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            _context.t0 = _context.sent;\n            return _context.abrupt(\"return\", {\n              thoughts: _context.t0\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":{"version":3,"sources":["D:/Users/Hak Wee/My Hall/ShearesMedia/passportprojectnext/src/pages/index.js"],"names":["Container","fetch","Thoughts","Index","props","thoughts","getInitialProps","req","baseURL","protocol","get","res","json"],"mappings":";;;;AAAA;AAEA,OAAOA,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SACE,MAAC,SAAD,QACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,KAAK,CAACC;AAA1B,IADF,CADF;AAKD;;AAEDF,KAAK,CAACG,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,QAASA,GAAT;AAChBC,YAAAA,OADgB,GACND,GAAG,aAAMA,GAAG,CAACE,QAAV,gBAAwBF,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAAxB,IAA4C,EADzC;AAAA;AAAA,mBAEJT,KAAK,WAAIO,OAAJ,mBAFD;;AAAA;AAEhBG,YAAAA,GAFgB;AAAA;AAAA,mBAIJA,GAAG,CAACC,IAAJ,EAJI;;AAAA;AAAA;AAAA;AAIpBP,cAAAA,QAJoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeF,KAAf","sourcesContent":["// ./src/pages/index.js\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport Thoughts from \"../components/Thoughts\";\r\n\r\nfunction Index(props) {\r\n  return (\r\n    <Container>\r\n      <Thoughts thoughts={props.thoughts} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async ({ req }) => {\r\n  const baseURL = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\r\n  const res = await fetch(`${baseURL}/api/thoughts`);\r\n  return {\r\n    thoughts: await res.json()\r\n  };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}